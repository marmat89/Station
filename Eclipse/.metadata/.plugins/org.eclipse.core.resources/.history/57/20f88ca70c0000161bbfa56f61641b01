package it.unibo.system;

import it.unibo.interfaces.StationRPI;
import it.unibo.util.AssembledList;

import java.util.List;

public interface Communicator {

	/**
	 * Send measure to DB need to know Sation and his last Update measure list
	 * read all measure and update them to DB
	 * 
	 * @param stat
	 *            Input station for data
	 * @param lastUpdate
	 *            Last measure received from sensor
	 */
	public abstract void sendMes();

	/**
	 * Used for update state on DB
	 * 
	 * @param stationID
	 *            Station to update
	 * @param stat
	 *            Actual State of Station
	 */
	public abstract void stationStateUpdate();

	/**
	 * 
	 * Used to update state of sensor on DB
	 * 
	 * @param stationID
	 *            stationID Station for link on DB
	 * @param sensor
	 *            Sensor to update
	 * @param stat
	 *            Actual state of Sensor
	 */
	public abstract void sensorStateUpdate();

	/**
	 * 
	 * Upload error on DB, with String param we can find correct data error
	 * format
	 * 
	 * @param statID
	 *            Station primary key
	 * @param senName
	 *            Sensor pimary key
	 * @param type
	 *            ErrorType
	 * @param erDesc
	 *            Error Desc
	 */
	public abstract void sendErr();

	/**
	 * Used for close DB communication
	 */
	public abstract void turnOffConnection();

	/**
	 * Used for open DB communication
	 */
	public abstract void turnOnConnection();

}